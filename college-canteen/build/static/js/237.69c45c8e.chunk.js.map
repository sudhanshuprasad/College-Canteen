{"version":3,"file":"static/js/237.69c45c8e.chunk.js","mappings":"qQAwEe,SAASA,EAAKC,GAE3B,IAAMC,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,GAClBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,KAAV,KACbC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAsDnC,SAASC,EAAWC,GAElB,IAAKL,EAGH,OAFAM,OAAOC,MAAM,6BACbT,EAAS,UAIX,IAAMU,EAAG,UAAMf,EAAN,wBAETgB,MAAMD,EAAK,CACTE,OAAQ,MACRC,QAAS,CACP,OAAU,MACV,eAAgB,mBAChB,UAAaC,aAAaC,QAAQ,cAEpCC,KAAK,WAAD,OAAaT,EAAb,sBAEHU,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZtB,EAASyB,EAAAA,GAAuBH,EAAKf,KAAKmB,QAC1C,IAAIC,EAAW,EACfL,EAAKf,KAAKmB,MAAME,KAAI,SAACC,GAEnB,OADAF,GAAUE,EAAQC,QAEnB,IACDP,QAAQC,IAAIG,GACZ3B,EAASyB,EAAAA,GAA2BE,IACpCjB,OAAOC,MAAM,yBACd,GACJ,CAED,OApFAoB,EAAAA,EAAAA,YAAU,WAET,GAAE,KAmFD,iBAAKC,UAAWC,EAAAA,EAAAA,KAAYC,GAAI,OAAStC,EAAMuC,IAA/C,WACE,SAAC,KAAD,CAAMC,GAAE,mBAAcxC,EAAMuC,KAA5B,UAEE,SAAC,EAAAE,cAAD,CAAeC,IAAK1C,EAAM2C,OAE1BC,IAAI,OACJC,OAAO,YAGT,iBAAKT,UAAWC,EAAAA,EAAAA,QAAhB,WAEE,iBAAKD,UAAWC,EAAAA,EAAAA,UAAhB,WACE,wBAAKrC,EAAM8C,YACX,mCAAY9C,EAAM+C,aAEpB,yBAAI,yBAAM/C,EAAMgD,SAEhB,mBAAQZ,UAAWC,EAAAA,EAAAA,UACjBY,QAAS,kBACPrC,EAAWZ,EAAMuC,IADV,EAGTD,GAAI,QAAUtC,EAAMuC,IAJtB,4BAWP,CAQDxC,EAAKmD,aAAe,CAClBJ,SAAU,eACVC,MAAO,EACPC,IAAK,iD","sources":["components/Card.js"],"sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport style from \"./css/Card.module.css\";\r\nimport urlContext from \"../context/api_url/urlContext\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCreaters } from \"../state\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport { addToCart as atc } from \"../utilities\";\r\n\r\n// const host = \"http://127.0.0.1:5000\";\r\n\r\n// function updateCart(foodID, host) {\r\n\r\n//   console.log('food ordered ' + foodID)\r\n//   let quantity = 1;\r\n\r\n//   //to get the cart and modify it\r\n//   const getCart = `${host}/api/cart/getCart`\r\n//   fetch(getCart, {\r\n//     method: 'GET',\r\n//     headers: {\r\n//       'Accept': '*/*',\r\n//       \"Content-Type\": \"application/json\",\r\n//       'authToken': localStorage.getItem('authToken'),\r\n//     }\r\n//   })\r\n//     .then(response => {\r\n//       return response.json()\r\n//     })\r\n//     .then(data => {\r\n//       try {\r\n//         cartItem = data[0].items;\r\n//       }\r\n//       catch (error) {\r\n//         // console.log(error)\r\n//       }\r\n//       let pushNewItem = true;\r\n//       for (let _id in cartItem) {\r\n//         if (cartItem[_id]._id === foodID) {\r\n//           cartItem[_id].quantity++;\r\n//           pushNewItem = false;\r\n//           console.log(\"quantity= \" + cartItem[_id].quantity);\r\n//           break\r\n//         }\r\n//       }\r\n\r\n//       if (pushNewItem) {\r\n//         cartItem.push({ \"_id\": foodID, \"quantity\": quantity })\r\n//       }\r\n//       console.log(cartItem)\r\n\r\n//     })\r\n//     .then(() => {\r\n//       //to update the cart according to the order\r\n//       const url = `${host}/api/cart/updateCart`\r\n\r\n//       fetch(url, {\r\n//         method: 'PUT',\r\n//         headers: {\r\n//           'Accept': '*/*',\r\n//           \"Content-Type\": \"application/json\",\r\n//           'authToken': localStorage.getItem('authToken')\r\n//         },\r\n//         body: `{\"items\":${JSON.stringify(cartItem)}}`\r\n//       });\r\n//     })\r\n\r\n// }\r\n\r\n\r\n\r\nexport default function Card(props) {\r\n\r\n  const host = useContext(urlContext)\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const login = useSelector(state => state.login);\r\n  const localCart = useSelector(state => state.cart);\r\n\r\n  // let cartItem = [{ _id: \"62278be34e90e53ae1b763be\", quantity: 2 }, { _id: \"62278ce84e90e53ae1b763c0\", quantity: 3 },];\r\n\r\n  useEffect(() => {\r\n    // dispatch(actionCreaters.setCart(cartItem))\r\n  }, [])\r\n\r\n\r\n  function addToCart(foodID) {\r\n    const url = `${host}/api/cart/updateCart`\r\n    // console.log([...localCart, { _id: foodID, quantity: 1 }]);\r\n\r\n    //check if the food is already in the cart\r\n    if (localCart.length === 0) {\r\n\r\n      dispatch(actionCreaters.setCart([{ _id: foodID, quantity: 1 }]));\r\n      console.log(\"local cart is empty\")\r\n\r\n      fetch(url, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          \"authToken\": localStorage.getItem('authToken')\r\n        },\r\n        body: `{\"items\":${JSON.stringify([{ _id: foodID, quantity: 1 }, ...localCart])}}`\r\n      }).then(() => {\r\n        window.alert('food added, check cart')\r\n      })\r\n\r\n    }\r\n    else {\r\n      insertCart(foodID);\r\n    }\r\n\r\n    // if (localCart.includes(foodID)) {\r\n    //   // dispatch(actionCreaters.setCart([...localCart, {_id: foodID, quantity: 1}]))\r\n    //   console.log(\"localCart\");\r\n\r\n    //   fetch(url, {\r\n    //     method: 'PUT',\r\n    //     headers: {\r\n    //       'Accept': '*/*',\r\n    //       \"Content-Type\": \"application/json\",\r\n    //       'authToken': localStorage.getItem('authToken')\r\n    //     },\r\n    //     body: `{\"items\":${JSON.stringify([{ _id: foodID, quantity: 1 }, ...localCart])}}`\r\n    //   });\r\n    // }\r\n  }\r\n\r\n\r\n\r\n  //function to add an item to the cart by sending the item only\r\n  function insertCart(foodID) {\r\n\r\n    if (!login) {\r\n      window.alert(\"You need login first\")\r\n      navigate(\"/login\")\r\n      return\r\n    }\r\n\r\n    const url = `${host}/api/cart/insertCart`;\r\n\r\n    fetch(url, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Accept': '*/*',\r\n        \"Content-Type\": \"application/json\",\r\n        'authToken': localStorage.getItem('authToken')\r\n      },\r\n      body: `{\"_id\":\"${foodID}\", \"quantity\":1}`\r\n    })\r\n      .then(response => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        dispatch(actionCreaters.setCart(data.cart.items));\r\n        let cartSize = 0\r\n        data.cart.items.map((element)=>{\r\n          cartSize+=element.quantity\r\n          return cartSize\r\n        })\r\n        console.log(cartSize)\r\n        dispatch(actionCreaters.setCartSize(cartSize));\r\n        window.alert('food added, check cart')\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className={style.item} id={\"item\" + props.num}>\r\n      <Link to={`/product/${props.num}`}>\r\n        {/* <img src={props.imgurl} alt=\"food\" loading=\"lazy\" /> */}\r\n        <LazyLoadImage src={props.imgurl}\r\n        /* width={225} height={100} */\r\n        alt=\"food\"\r\n        effect=\"blur\"\r\n      />\r\n      </Link>\r\n      <div className={style.content}>\r\n        {/* <Link to={`/product/${props.num}`}> */}\r\n        <div className={style.item_name}>\r\n          <h3>{props.foodName}</h3>\r\n          <h3>&#8377;{props.price}</h3>\r\n        </div>\r\n        <h5><div>{props.dsc}</div></h5>\r\n        {/* </Link> */}\r\n        <button className={style.order_btn}\r\n          onClick={() =>\r\n            insertCart(props.num)\r\n          }\r\n          id={\"order\" + props.num}>\r\n          Order Now\r\n        </button>\r\n        {/* <button className=\"order-btn\" onClick={() => addToCart(props.num)} id={\"order\" + props.num}>Order Now</button> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  // num:PropTypes.number.isRequired,\r\n  foodName: PropTypes.string.isRequired,\r\n  price: PropTypes.number.isRequired,\r\n  dsc: PropTypes.string\r\n}\r\nCard.defaultProps = {\r\n  foodName: \"Unnamed Food\",\r\n  price: 0,\r\n  dsc: \"No discription is available for this food item\"\r\n}"],"names":["Card","props","host","useContext","urlContext","dispatch","useDispatch","navigate","useNavigate","login","useSelector","state","cart","insertCart","foodID","window","alert","url","fetch","method","headers","localStorage","getItem","body","then","response","json","data","console","log","actionCreaters","items","cartSize","map","element","quantity","useEffect","className","style","id","num","to","LazyLoadImage","src","imgurl","alt","effect","foodName","price","dsc","onClick","defaultProps"],"sourceRoot":""}